name: Build wheels

on:
  release:
    types: [published]

  # Enable manual run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
        env:
          CIBW_SKIP: "cp36-* cp37-* pp* *-musllinux_* *-manylinux_i686 *_ppc64le *_s390x"
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_TEST_COMMAND: pytest {project}/tests
          CIBW_TEST_EXTRAS: "test,plots"
          CIBW_TEST_SKIP: "*-*linux_aarch64 *-win32 cp38-macosx_x86_64"  # some skips are temporary

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: bdist_files

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4

      - name: Build sdist (pep517)
        run: |
          python -m pip install build
          python -m build --sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist_files
          path: dist/*.tar.gz

  publish_wheels:
    name: Publish wheels on pypi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: install requirements
        run: pip install twine==4.0.2

      - uses: actions/download-artifact@v3
        with:
          name: bdist_files
          path: dist

      - uses: actions/download-artifact@v3
        with:
          name: sdist_files
          path: dist

      - name: check
        run: twine check dist/*

      - name: upload
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

name: tests

on:
  # only run tests and coverage when src code changes
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    # Interim measure: run all tests on all PRs, as these Checks
    # are configured as Required Status Checks. See #2951
    # paths:
    #   - "shap/**"
    #   - "tests/**"
    #   - "data/**"
    #   - ".github/workflows/run_tests.yml"
    #   - "setup.py"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: pre-commit/action@v3.0.0

  run_tests:

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11"]
        extras: ["test"]
        include:
          # Also test on windows/mac, just one job each
          - os: macos-latest
            python-version: "3.10"
            extras: "test"
            name: macos-3.10
          - os: macos-latest
            python-version: "3.11"
            extras: "test"
            name: macos-3.11
          - os: macos-latest
            python-version: "3.11"
            extras: "test-core"
            name: core-3.11
      fail-fast: false
    # Workaround to ensure job name stays the same, so "Required Checks" still present
    name: run_tests (${{ matrix.name && matrix.name || matrix.python-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python libs
        uses: actions/cache@v3
        if: matrix.extras == 'test'
        with:
          path: |
            # Only cache a subset of libraries, ensuring cache size remains under 10GB. See dsgibbons#42
            ${{ env.pythonLocation }}/**/site-packages/pyspark*
            ${{ env.pythonLocation }}/**/site-packages/nvidia*
            ${{ env.pythonLocation }}/**/site-packages/torch*
            ${{ env.pythonLocation }}/**/site-packages/functorch*
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-0
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          # Use "eager" update strategy in case cached dependencies are outdated
          # Using regular install NOT editable install: see GH #3020
          pip install --upgrade --upgrade-strategy eager '.[${{ matrix.extras }},plots]'
          which python
          echo ${{ env.pythonLocation }}
          which pytest
          ls -lah ${{ env.pythonLocation }}/lib/python${{ matrix.python-version }}/site-packages/ | grep "torch"
          ls -lah ${{ env.pythonLocation }}/lib/python${{ matrix.python-version }}/site-packages/torch/
          ls -lah ${{ env.pythonLocation }}/lib/python${{ matrix.python-version }}/site-packages/torch/lib
      - name: Test with pytest
        # Ensure we avoid adding current working directory to sys.path:
        # - Use "pytest" over "python -m pytest"
        # - Use "append" import mode rather than default "prepend"
        run: >
          pytest --durations=20
          --cov=shap --cov-report=xml --cov-report=term-missing
          --mpl-generate-summary=html --mpl-results-path=./mpl-results
          --import-mode=append
          tests/maskers
      - name: Upload mpl test report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: mpl-results-${{ matrix.python-version }}
          path: mpl-results/
          if-no-files-found: ignore
